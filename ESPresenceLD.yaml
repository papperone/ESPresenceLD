substitutions:
  name: "espresence-ld2410"
  friendly_name: "LD2410 Presence Sensor"
  disable_entities:  "true" # Disabilitare in blocco entità superflue
  wifi_ap_timeout: 2min    # default to 2 minute timeout for yaml file as package.

esphome:
  name: "$name"
  build_path: ./build/${name}
  project:
    name: "espresence.ld2410"
    version: "1.0.0"
  on_boot: # Ai fini di debug, senza connessione ad HA è inutile far rilevare continuamente distanze, appesantiscono il log
    - wait_until:  
          condition:  
            api.connected: #se si utilizza mqtt questo va sostituito con wifi connected
        #  timeout: 8s

esp32:
  board: esp32dev
  framework:
    type: arduino

wifi:
  ssid: dummy #!secret wifi_ssid #$ssid
  password: dummydummy #!secret wifi_password #$password

# Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ap_timeout: $wifi_ap_timeout
  # ssid: # non occorre, di default prenderà il devicename
    password: "dummydummy"
  
# Enable Home Assistant API
api:
  services:
    - service: set_ld2410_bluetooth_password
      variables:
        password: string
      then:
        - bluetooth_password.set:
            id: ld2410_device
            password: !lambda 'return password;'
ota:
  platform: esphome
#  on_error:
#    then:
#      - button.press: restart_button

captive_portal:

web_server:
  port: 80

# Enable logging
logger:
  hardware_uart: uart0

uart:
  #id: uart1
  tx_pin: GPIO33
  rx_pin: GPIO18
  baud_rate: 256000
  parity: NONE
  stop_bits: 1

ld2410:
  #timeout: 10s
  #throttle: 1000ms
  id: ld2410_device

sensor:
  # LDR Analog input -------------------------------------
  - platform: adc
    pin: GPIO34
    attenuation: auto
    name: "Light Sensor"
    unit_of_measurement: "%"
    accuracy_decimals: 0
    update_interval: 5s
    filters:
      - lambda: |-
          auto r = map((x * 100), 19, id(ldr_sens).state, 0, 100);
          if (r > 0) return r;
          return 0;
  # Retain last Detection Distance reported --------------
  - platform: template
    name: "Last Detection Distance"
    id: last_detection_distance
    unit_of_measurement: cm
    accuracy_decimals: 0
    update_interval: 1s
    lambda: |-
      if ((id(binary_has_target).state) && (id(presence_det_dist).state > 0)) {
        return id(presence_det_dist).state;
      } else {
        return {};
      }
  # LD2410 Sensors ----------------------------------------
  - platform: ld2410
    light:
      name: "Light"
    moving_distance:
      name: "Moving Distance"
    still_distance:
      name: "Still Distance"
    moving_energy:
      name: "Move Energy"
    still_energy:
      name: "Still Energy"
    detection_distance:
      name: "Detection Distance"
      id: presence_det_dist
    g0:
      move_energy:
        name: "G0 move energy"
      still_energy:
        name: "G0 still energy"
    g1:
      move_energy:
        name: "G1 move energy"
      still_energy:
        name: "G1 still energy"
    g2:
      move_energy:
        name: "G2 move energy"
      still_energy:
        name: "G2 still energy"
    g3:
      move_energy:
        name: "G3 move energy"
      still_energy:
        name: "G3 still energy"
    g4:
      move_energy:
        name: "G4 move energy"
      still_energy:
        name: "G4 still energy"
    g5:
      move_energy:
        name: "G5 move energy"
      still_energy:
        name: "G5 still energy"
    g6:
      move_energy:
        name: "G6 move energy"
      still_energy:
        name: "G6 still energy"
    g7:
      move_energy:
        name: "G7 move energy"
      still_energy:
        name: "G7 still energy"
    g8:
      move_energy:
        name: "G8 move energy"
      still_energy:
        name: "G8 still energy"

binary_sensor:
  - platform: ld2410
    has_target:
      name: "Presence"
      id: binary_has_target
    has_moving_target:
      name: "Moving presence"
    has_still_target:
      name: "Still presence"
    out_pin_presence_status:
      name: "Out pin presence status"
  ## Set Up Zones Based On Distance reported by the sensor
  - platform: template
    name: "Zone 1 Occupancy"
    device_class: occupancy
    icon: mdi:motion-sensor
    lambda: |-
      if ((id(binary_has_target).state) && ((id(last_detection_distance).state < id(presence_z1_end).state))) {
        return true;
      } else {
        return false;
      }
  - platform: template
    name: "Zone 2 Occupancy"
    device_class: occupancy
    icon: mdi:motion-sensor
    lambda: |-
      if ((id(binary_has_target).state) && ((id(presence_z1_end).state < id(last_detection_distance).state) && (id(last_detection_distance).state < id(presence_z2_end).state))) {
        return true;
      } else {
        return false;
      }
  - platform: template
    name: "Zone 3 Occupancy"
    device_class: occupancy
    icon: mdi:motion-sensor
    lambda: |-
      if ((id(binary_has_target).state) && ((id(presence_z2_end).state < id(last_detection_distance).state) && (id(last_detection_distance).state < id(presence_z3_end).state))) {
        return true;
      } else {
        return false;
      }


switch:
  - platform: ld2410
    engineering_mode:
      name: "Engineering mode"
    bluetooth:
      name: "Control bluetooth"
  - platform: gpio
    pin: GPIO23
    name: "Deactivate presence LED"
    id: presence_led
    entity_category: config

light:
  - platform: status_led
    name: "Status LED ESP32"
    pin: GPIO13

button:
  - platform: ld2410
    factory_reset:
      entity_category: diagnostic
      name: "LD 2410 Factory reset"
    restart:
      entity_category: diagnostic
      name: "LD 2410 Restart"
    query_params:
      entity_category: diagnostic
      name: "Query params"
  - platform: restart
    entity_category: diagnostic
    icon: mdi:power-cycle
    name: "ESP reboot"
  - platform: factory_reset
    name: "Restart ESP with Factory Default Settings"

number:
  - platform: ld2410
    timeout:
      name: "Timeout"
      entity_category: config
    light_threshold:
      name: "Light threshold"
      entity_category: config
    max_move_distance_gate:
      name: "Max move distance gate"
      entity_category: config
    max_still_distance_gate:
      name: "Max still distance gate"
      entity_category: config
    g0:
      move_threshold:
        name: "G0 move threshold"
      still_threshold:
        name: "G0 still threshold"
    g1:
      move_threshold:
        name: "G1 move threshold"
      still_threshold:
        name: "G1 still threshold"
    g2:
      move_threshold:
        name: "G2 move threshold"
      still_threshold:
        name: "G2 still threshold"
    g3:
      move_threshold:
        name: "G3 move threshold"
      still_threshold:
        name: "G3 still threshold"
    g4:
      move_threshold:
        name: "G4 move threshold"
      still_threshold:
        name: "G4 still threshold"
    g5:
      move_threshold:
        name: "G5 move threshold"
      still_threshold:
        name: "G5 still threshold"
    g6:
      move_threshold:
        name: "G6 move threshold"
      still_threshold:
        name: "G6 still threshold"
    g7:
      move_threshold:
        name: "G7 move threshold"
      still_threshold:
        name: "G7 still threshold"
    g8:
      move_threshold:
        name: "G8 move threshold"
      still_threshold:
        name: "G8 still threshold"
  # setup threshold for LDR reading
  - platform: template
    name: "LDR Threshold"
    id: ldr_sens
    min_value: 20
    max_value: 600
    step: 1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 310
    icon: "mdi:head-lightbulb"
    entity_category: CONFIG
  # setup for 3 zones --> occupancy ending values (distance)
  - platform: template
    name: "Zone 1 End Distance"
    id: presence_z1_end
    device_class: distance
    min_value: 0
    max_value: 600
    step: 1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 50
    icon: "mdi:arrow-collapse-right"
    entity_category: CONFIG
  - platform: template
    name: "Zone 2 End Distance"
    id: presence_z2_end
    device_class: distance
    min_value: 0
    max_value: 600
    step: 1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 100
    icon: "mdi:arrow-collapse-right"
    entity_category: CONFIG
  - platform: template
    name: "Zone 3 End Distance"
    id: presence_z3_end
    device_class: distance
    min_value: 0
    max_value: 600
    step: 1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 200
    icon: "mdi:arrow-collapse-right"
    entity_category: CONFIG

text_sensor:
  - platform: ld2410
    version:
      name: "Firmware version"
      entity_category: diagnostic
      disabled_by_default: $disable_entities
    mac_address:
      name: "Mac address"
      entity_category: diagnostic
      disabled_by_default: $disable_entities

select:
  - platform: ld2410
    distance_resolution:
      entity_category: config
      name: "Distance resolution"
    baud_rate:
      entity_category: config
      name: "Baud rate"
    light_function:
      entity_category: config
      name: "Light function"
    out_pin_level:
      entity_category: config
      name: "Out pin level"

# questo ce lo teniamo per le prove, poi possiamo cancellarlo se tutto va bene
#packages:
#  remote_package:
#    url: https://github.com/papperone/ESPresenceLD
#    ref: main # optional
#    file: ESPresenceLD.yaml
#    refresh: 60s # optional

# Prova per un custom id necessario all'interfaccia di Maurizio
#text:
#  - platform: template
#    id: sensorname_id
#    name: "Sensori-2410-cast"
#    optimistic: true
#    min_length: 0
#    max_length: 20
#    mode: text
